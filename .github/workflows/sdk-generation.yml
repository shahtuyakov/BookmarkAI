name: SDK Generation

on:
  push:
    paths:
      - 'apps/api/openapi.yaml'
      - 'packages/sdk/**'
    branches:
      - main
      - develop
  pull_request:
    paths:
      - 'apps/api/openapi.yaml'
      - 'packages/sdk/**'

jobs:
  generate-sdk:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd packages/sdk
          npm ci
          
      - name: Generate SDK
        run: |
          cd packages/sdk
          npm run generate
          
      - name: Build SDK
        run: |
          cd packages/sdk
          npm run build
          
      - name: Run tests
        run: |
          cd packages/sdk
          npm test
          
      - name: Check for changes
        id: check-changes
        run: |
          if [[ -n $(git status --porcelain packages/sdk/src/generated) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Commit generated code
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add packages/sdk/src/generated
          git commit -m "chore: regenerate SDK from OpenAPI spec"
          
      - name: Push changes
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'push'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  publish-sdk:
    needs: generate-sdk
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: |
          cd packages/sdk
          npm ci
          
      - name: Generate SDK
        run: |
          cd packages/sdk
          npm run generate
          
      - name: Build SDK
        run: |
          cd packages/sdk
          npm run build
          
      - name: Check if version changed
        id: version-check
        run: |
          cd packages/sdk
          PUBLISHED_VERSION=$(npm view @bookmarkai/sdk version 2>/dev/null || echo "0.0.0")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$PUBLISHED_VERSION" != "$CURRENT_VERSION" ]; then
            echo "publish=true" >> $GITHUB_OUTPUT
          else
            echo "publish=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Publish to npm
        if: steps.version-check.outputs.publish == 'true'
        run: |
          cd packages/sdk
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}