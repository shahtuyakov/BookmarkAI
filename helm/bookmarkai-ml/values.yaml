# Default values for bookmarkai-ml
replicaCount: 1

# Global settings
global:
  environment: production
  namespace: bookmarkai-ml
  
# KEDA Configuration
keda:
  enabled: true
  # Additional KEDA settings can be configured here

# Prometheus Configuration  
prometheus:
  enabled: false  # Set to true if you want to deploy Prometheus
  
# Image configuration
images:
  llmWorker:
    repository: bookmarkai/llm-worker
    tag: latest
    pullPolicy: IfNotPresent
  whisperWorker:
    repository: bookmarkai/whisper-worker
    tag: latest
    pullPolicy: IfNotPresent
  vectorWorker:
    repository: bookmarkai/vector-worker
    tag: latest
    pullPolicy: IfNotPresent
  pullSecrets: []

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Worker configurations
workers:
  llm:
    enabled: true
    concurrency: 2
    maxTasksPerChild: 50
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "2000m"
    autoscaling:
      minReplicas: 1
      maxReplicas: 10
      targetQueueLength: 5
      cooldownPeriod: 300
      idleReplicas: 0
      
  whisper:
    enabled: true
    concurrency: 1
    maxTasksPerChild: 25
    resources:
      requests:
        memory: "2Gi"
        cpu: "1000m"
      limits:
        memory: "4Gi"
        cpu: "4000m"
    autoscaling:
      minReplicas: 1
      maxReplicas: 5
      targetQueueLength: 2
      cooldownPeriod: 600
      idleReplicas: 0
    storage:
      enabled: true
      size: 50Gi
      storageClass: fast-ssd
      
  vector:
    enabled: true
    concurrency: 4
    maxTasksPerChild: 100
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "1000m"
    autoscaling:
      minReplicas: 1
      maxReplicas: 20
      targetQueueLength: 10
      cooldownPeriod: 180
      idleReplicas: 1

# RabbitMQ configuration
rabbitmq:
  host: rabbitmq.bookmarkai.svc.cluster.local
  port: 5672
  vhost: bookmarkai
  username: bookmarkai
  # Password should be provided via secrets
  
# PostgreSQL configuration
postgresql:
  host: postgres.bookmarkai.svc.cluster.local
  port: 5432
  database: bookmarkai
  username: bookmarkai
  # Password should be provided via secrets
  
# Redis configuration
redis:
  host: redis.bookmarkai.svc.cluster.local
  port: 6379
  
# S3/MinIO configuration
s3:
  endpoint: http://minio.bookmarkai.svc.cluster.local:9000
  region: us-east-1
  useSSL: false
  bucketName: bookmarkai-ml-assets
  
# OpenTelemetry configuration
opentelemetry:
  enabled: true
  endpoint: http://jaeger-collector.bookmarkai.svc.cluster.local:4318
  serviceName: bookmarkai-ml
  
# Contract validation
contractValidation:
  enabled: true
  
# Monitoring
monitoring:
  prometheusOperator:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      
# Security
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000
  
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL
    
# Node selection
nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - llm-worker
            - whisper-worker
            - vector-worker
        topologyKey: kubernetes.io/hostname