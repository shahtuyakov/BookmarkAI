---
openapi: 3.0.0
paths:
  "/health":
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        '200':
          description: ''
  "/v1/auth/register":
    post:
      operationId: AuthController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
      responses:
        '201':
          description: ''
  "/v1/auth/login":
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
      responses:
        '200':
          description: ''
  "/v1/auth/refresh":
    post:
      operationId: AuthController_refresh
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RefreshTokenDto"
      responses:
        '200':
          description: ''
  "/v1/auth/logout":
    post:
      operationId: AuthController_logout
      parameters: []
      responses:
        '200':
          description: ''
  "/v1/auth/verify-email":
    get:
      operationId: AuthController_verifyEmail
      parameters:
      - name: token
        required: true
        in: query
        schema:
          type: string
      responses:
        '200':
          description: ''
  "/v1/auth/resend-verification":
    post:
      operationId: AuthController_resendVerification
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResendVerificationDto"
      responses:
        '200':
          description: ''
  "/v1/auth/forgot-password":
    post:
      operationId: AuthController_forgotPassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResetPasswordRequestDto"
      responses:
        '200':
          description: ''
  "/v1/auth/reset-password":
    post:
      operationId: AuthController_resetPassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResetPasswordDto"
      responses:
        '200':
          description: ''
    get:
      operationId: AuthController_getResetPasswordPage
      parameters:
      - name: token
        required: true
        in: query
        schema:
          type: string
      responses:
        '200':
          description: ''
  "/v1/auth/profile":
    get:
      operationId: AuthController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
  "/v1/auth/social/google":
    post:
      operationId: SocialAuthController_googleSignIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GoogleAuthDto"
      responses:
        '200':
          description: ''
  "/v1/auth/social/apple":
    post:
      operationId: SocialAuthController_appleSignIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AppleAuthDto"
      responses:
        '200':
          description: ''
  "/v1/test/protected":
    get:
      operationId: TestController_getProtected
      parameters: []
      responses:
        '200':
          description: ''
  "/v1/test/public":
    get:
      operationId: TestController_getPublic
      parameters: []
      responses:
        '200':
          description: ''
  "/v1/test/admin":
    get:
      operationId: TestController_getAdminOnly
      parameters: []
      responses:
        '200':
          description: ''
  "/v1/shares":
    post:
      operationId: SharesController_createShare
      summary: Create a new share
      parameters:
      - name: Idempotency-Key
        required: true
        in: header
        description: Unique key to prevent duplicate submissions
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateShareDto"
      responses:
        '202':
          description: Share accepted for processing
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShareDto"
        '400':
          description: Invalid request data
      tags:
      - shares
      security:
      - bearer: []
    get:
      operationId: SharesController_getShares
      summary: Get paginated list of shares
      parameters:
      - name: cursor
        required: false
        in: query
        description: Cursor for pagination
        schema:
          example: 2025-05-17T12:34:56.789Z_123e4567-e89b-12d3-a456-426614174000
          type: string
      - name: limit
        required: false
        in: query
        description: Number of items to return
        schema:
          minimum: 1
          maximum: 100
          default: 20
          type: number
      - name: platform
        required: false
        in: query
        description: Filter by platform
        schema:
          enum:
          - tiktok
          - reddit
          - twitter
          - x
          - youtube
          - generic
          - unknown
          type: string
      - name: status
        required: false
        in: query
        description: Filter by status
        schema:
          enum:
          - pending
          - processing
          - fetching
          - done
          - error
          type: string
      responses:
        '200':
          description: List of shares
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedSharesDto"
      tags:
      - shares
      security:
      - bearer: []
  "/v1/shares/{id}":
    get:
      operationId: SharesController_getShareById
      summary: Get a specific share by ID
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '200':
          description: Share details
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShareDto"
        '404':
          description: Share not found
      tags:
      - shares
      security:
      - bearer: []
  "/v1/shares/search/text":
    post:
      operationId: SharesController_searchByText
      summary: Search shares by text query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SearchByTextDto"
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedSearchResultsDto"
        '400':
          description: Invalid request data
      tags:
      - shares
      security:
      - bearer: []
  "/v1/shares/search/share/{shareId}":
    post:
      operationId: SharesController_searchBySimilarity
      summary: Find shares similar to a specific share
      parameters:
      - name: shareId
        required: true
        in: path
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SearchByShareDto"
      responses:
        '200':
          description: Similar shares
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedSearchResultsDto"
        '404':
          description: Share not found
      tags:
      - shares
      security:
      - bearer: []
  "/v1/shares/enriched":
    get:
      operationId: EnrichedSharesController_getEnrichedShares
      summary: Get paginated list of shares with ML results
      description: Returns shares with their ML processing results (summaries, transcripts) in a single response
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of items per page (1-100)
        example: 20
        schema:
          type: number
      - name: cursor
        required: false
        in: query
        description: Pagination cursor
        schema:
          type: string
      - name: platform
        required: false
        in: query
        description: Filter by platform(s), comma-separated
        example: tiktok,youtube
        schema:
          type: string
      - name: mlStatus
        required: false
        in: query
        description: Filter by ML processing status
        schema:
          enum:
          - complete
          - partial
          - none
          - failed
          type: string
      - name: mediaType
        required: false
        in: query
        description: Filter by media type
        schema:
          enum:
          - video
          - image
          - audio
          - none
          type: string
      - name: status
        required: false
        in: query
        description: Filter by share status, comma-separated
        example: done,processing
        schema:
          type: string
      - name: hasTranscript
        required: false
        in: query
        description: Only return shares with transcripts
        schema:
          type: boolean
      - name: since
        required: false
        in: query
        description: Only return shares created after this date
        example: '2024-01-01'
        schema:
          type: string
      responses:
        '200':
          description: List of enriched shares
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedEnrichedSharesDto"
      tags:
      - Enriched Shares
      security:
      - bearer: []
  "/v1/shares/enriched/{id}":
    get:
      operationId: EnrichedSharesController_getEnrichedShareById
      summary: Get a specific share by ID with ML results
      description: Returns a single share with all its ML processing results
      parameters:
      - name: id
        required: true
        in: path
        description: Share ID
        schema:
          type: string
      responses:
        '200':
          description: Enriched share details
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EnrichedShareDto"
        '404':
          description: Share not found
      tags:
      - Enriched Shares
      security:
      - bearer: []
  "/metrics/idempotency":
    get:
      operationId: MetricsController_getIdempotencyMetrics
      summary: Get idempotency metrics
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - metrics
  "/ml/analytics/transcription/costs":
    get:
      operationId: MLAnalyticsController_getTranscriptionCostSummary
      summary: Get transcription cost summary
      parameters:
      - name: hours
        required: false
        in: query
        description: 'Number of hours to look back (default: 24)'
        schema:
          type: number
      responses:
        '200':
          description: Cost summary retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CostSummaryDto"
      tags:
      - ML Analytics
      security:
      - bearer: []
  "/ml/analytics/transcription/costs/detailed":
    get:
      operationId: MLAnalyticsController_getDetailedTranscriptionCosts
      summary: Get detailed transcription costs
      parameters:
      - name: hours
        required: false
        in: query
        description: 'Number of hours to look back (default: 24)'
        schema:
          type: number
      - name: limit
        required: false
        in: query
        description: 'Number of results to return (default: 100)'
        schema:
          type: number
      - name: offset
        required: false
        in: query
        description: 'Number of results to skip (default: 0)'
        schema:
          type: number
      responses:
        '200':
          description: Detailed costs retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DetailedCostsResponseDto"
      tags:
      - ML Analytics
      security:
      - bearer: []
  "/ml/analytics/tasks/summary":
    get:
      operationId: MLAnalyticsController_getMLTaskSummary
      summary: Get ML task summary across all types
      parameters:
      - name: hours
        required: false
        in: query
        description: 'Number of hours to look back (default: 24)'
        schema:
          type: number
      responses:
        '200':
          description: Task summary retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MLResultSummaryDto"
      tags:
      - ML Analytics
      security:
      - bearer: []
  "/ml/analytics/budget/status":
    get:
      operationId: MLAnalyticsController_getBudgetStatus
      summary: Get current budget status
      parameters: []
      responses:
        '200':
          description: Budget status retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BudgetStatusDto"
      tags:
      - ML Analytics
      security:
      - bearer: []
  "/ml/analytics/transcription/result/{shareId}":
    get:
      operationId: MLAnalyticsController_getTranscriptionResult
      summary: Get transcription result for a specific share
      parameters:
      - name: shareId
        required: true
        in: path
        schema:
          type: string
      responses:
        '200':
          description: Transcription result retrieved successfully
        '404':
          description: Transcription result not found
      tags:
      - ML Analytics
      security:
      - bearer: []
info:
  title: BookmarkAI API
  description: API for BookmarkAI service
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    RegisterDto:
      type: object
      properties: {}
    LoginDto:
      type: object
      properties: {}
    RefreshTokenDto:
      type: object
      properties: {}
    ResendVerificationDto:
      type: object
      properties: {}
    ResetPasswordRequestDto:
      type: object
      properties: {}
    ResetPasswordDto:
      type: object
      properties: {}
    GoogleAuthDto:
      type: object
      properties:
        idToken:
          type: string
          description: Google ID token from OAuth2
        nonce:
          type: string
          description: Optional nonce for security
        deviceInfo:
          type: object
          properties:
            platform:
              type: string
              description: Device platform (web, ios, android)
            version:
              type: string
              description: App version
      required:
        - idToken
    AppleAuthDto:
      type: object
      properties:
        idToken:
          type: string
          description: Apple ID token from Sign in with Apple
        authorizationCode:
          type: string
          description: Authorization code for token exchange
        nonce:
          type: string
          description: Optional nonce for security
        firstName:
          type: string
          description: User's first name (only on first sign-in)
        lastName:
          type: string
          description: User's last name (only on first sign-in)
        deviceInfo:
          type: object
          properties:
            platform:
              type: string
              description: Device platform (web, ios, android)
            version:
              type: string
              description: App version
      required:
        - idToken
    CreateShareDto:
      type: object
      properties:
        url:
          type: string
          description: URL to share
          example: https://www.tiktok.com/@username/video/1234567890
      required:
      - url
    ShareDto:
      type: object
      properties:
        id:
          type: string
          description: Share ID
          example: 123e4567-e89b-12d3-a456-426614174000
        url:
          type: string
          description: URL of the shared content
          example: https://www.tiktok.com/@username/video/1234567890
        platform:
          type: string
          description: Platform the content is from
          enum:
          - tiktok
          - reddit
          - twitter
          - x
          - youtube
          - generic
          - unknown
          example: tiktok
        status:
          type: string
          description: Status of the share processing
          enum:
          - pending
          - processing
          - fetching
          - done
          - error
          example: pending
        title:
          type: string
          description: Title of the shared content
          example: Amazing TikTok Video
        description:
          type: string
          description: Description of the shared content
          example: This is a funny video about cats
        author:
          type: string
          description: Author of the content
          example: johndoe
        thumbnailUrl:
          type: string
          description: Thumbnail URL
          example: https://example.com/thumbnail.jpg
        mediaUrl:
          type: string
          description: Media URL
          example: https://example.com/video.mp4
        mediaType:
          type: string
          description: Type of media
          enum:
          - video
          - image
          - audio
          - none
          example: video
        platformData:
          type: object
          description: Platform-specific data
        createdAt:
          format: date-time
          type: string
          description: When the share was created
          example: '2025-05-17T12:34:56.789Z'
        updatedAt:
          format: date-time
          type: string
          description: When the share was last updated
          example: '2025-05-17T12:34:56.789Z'
      required:
      - id
      - url
      - platform
      - status
      - createdAt
      - updatedAt
    PaginatedSharesDto:
      type: object
      properties:
        items:
          description: Array of shares
          type: array
          items:
            "$ref": "#/components/schemas/ShareDto"
        cursor:
          type: string
          description: Cursor for the next page
          example: 2025-05-17T12:34:56.789Z_123e4567-e89b-12d3-a456-426614174000
        hasMore:
          type: boolean
          description: Whether there are more items available
          example: true
        limit:
          type: number
          description: Number of items returned
          example: 20
      required:
      - items
      - hasMore
      - limit
    MLResultsDto:
      type: object
      properties:
        summary:
          type: string
          description: AI-generated summary of the content
          example: This video demonstrates a cooking technique for...
        keyPoints:
          type: array
          items:
            type: string
          description: Key points extracted from the content
          example: ['Use fresh ingredients', 'Cook at medium heat', 'Season to taste']
        transcript:
          type: string
          description: Transcript of audio/video content
          example: Hello everyone, today we are going to...
        language:
          type: string
          description: Detected language of the content
          example: en
        duration:
          type: number
          description: Duration of audio/video in seconds
          example: 180
        hasEmbeddings:
          type: boolean
          description: Whether embeddings have been generated
          example: true
        processingStatus:
          type: object
          description: Processing status for each ML task
          properties:
            summary:
              type: string
              enum:
              - pending
              - processing
              - done
              - failed
              - not_applicable
            transcript:
              type: string
              enum:
              - pending
              - processing
              - done
              - failed
              - not_applicable
            embeddings:
              type: string
              enum:
              - pending
              - processing
              - done
              - failed
              - not_applicable
          required:
          - summary
          - transcript
          - embeddings
        processedAt:
          type: object
          description: Timestamps when each ML task was processed
          properties:
            summary:
              type: string
              format: date-time
            transcript:
              type: string
              format: date-time
            embeddings:
              type: string
              format: date-time
        error:
          type: object
          description: Error messages for failed ML tasks
          properties:
            summary:
              type: string
            transcript:
              type: string
            embeddings:
              type: string
      required:
      - processingStatus
    EnrichedShareDto:
      type: object
      allOf:
      - "$ref": "#/components/schemas/ShareDto"
      - type: object
        properties:
          mlResults:
            "$ref": "#/components/schemas/MLResultsDto"
            description: ML processing results
    PaginatedEnrichedSharesDto:
      type: object
      properties:
        items:
          description: List of enriched shares
          type: array
          items:
            "$ref": "#/components/schemas/EnrichedShareDto"
        cursor:
          type: string
          description: Cursor for next page
          example: eyJpZCI6IjEyMzQ1Njc4In0=
        hasMore:
          type: boolean
          description: Whether more items exist
          example: true
        limit:
          type: number
          description: Number of items per page
          example: 20
      required:
      - items
      - hasMore
      - limit
    SearchByTextDto:
      type: object
      properties:
        query:
          type: string
          description: Search query text
          example: machine learning tutorials
        limit:
          type: number
          description: Maximum number of results to return
          default: 20
          example: 10
        cursor:
          type: string
          description: Cursor for pagination
        minSimilarity:
          type: number
          description: Minimum similarity score (0-1)
          default: 0.7
          example: 0.75
        platform:
          type: string
          description: Filter by platform
          enum:
          - tiktok
          - reddit
          - twitter
          - x
          - youtube
          - generic
          - unknown
        status:
          type: string
          description: Filter by status
          enum:
          - pending
          - processing
          - fetching
          - done
          - error
      required:
      - query
    SearchByShareDto:
      type: object
      properties:
        limit:
          type: number
          description: Maximum number of results to return
          default: 20
          example: 10
        minSimilarity:
          type: number
          description: Minimum similarity score (0-1)
          default: 0.7
          example: 0.75
        excludeSelf:
          type: boolean
          description: Whether to exclude the share being compared
          default: true
        platform:
          type: string
          description: Filter by platform
          enum:
          - tiktok
          - reddit
          - twitter
          - x
          - youtube
          - generic
          - unknown
        status:
          type: string
          description: Filter by status
          enum:
          - pending
          - processing
          - fetching
          - done
          - error
    SearchResultDto:
      type: object
      allOf:
      - "$ref": "#/components/schemas/ShareDto"
      - type: object
        properties:
          similarity:
            type: number
            description: Similarity score (0-1)
            example: 0.85
          contentPreview:
            type: string
            description: Preview of the content
            example: This tutorial covers the basics of machine learning...
          highlights:
            type: array
            description: Text highlights matching the search
            items:
              type: string
            example: ["machine learning", "neural networks"]
        required:
        - similarity
    PaginatedSearchResultsDto:
      type: object
      properties:
        items:
          description: Array of search results
          type: array
          items:
            "$ref": "#/components/schemas/SearchResultDto"
        cursor:
          type: string
          description: Cursor for the next page
        hasMore:
          type: boolean
          description: Whether there are more items available
        limit:
          type: number
          description: Number of items returned
        total:
          type: number
          description: Total number of matching results
      required:
      - items
      - hasMore
      - limit
    CostSummaryDto:
      type: object
      properties:
        periodHours:
          type: number
          description: Period in hours
        totalCostUsd:
          type: number
          description: Total cost in USD
        totalDurationSeconds:
          type: number
          description: Total audio duration in seconds
        totalDurationHours:
          type: number
          description: Total audio duration in hours
        transcriptionCount:
          type: number
          description: Number of transcriptions
        avgCostPerTranscription:
          type: number
          description: Average cost per transcription
        avgDurationSeconds:
          type: number
          description: Average duration in seconds
        costPerHour:
          type: number
          description: Cost per hour of audio
        breakdown:
          type: object
          description: Cost breakdown by backend
      required:
      - periodHours
      - totalCostUsd
      - totalDurationSeconds
      - totalDurationHours
      - transcriptionCount
      - avgCostPerTranscription
      - avgDurationSeconds
      - costPerHour
    TranscriptionCostDto:
      type: object
      properties:
        shareId:
          type: string
          description: Share ID
        audioDurationSeconds:
          type: number
          description: Audio duration in seconds
        billingUsd:
          type: number
          description: Cost in USD
        backend:
          type: string
          description: Backend used (api/local)
        createdAt:
          format: date-time
          type: string
          description: Creation timestamp
      required:
      - shareId
      - audioDurationSeconds
      - billingUsd
      - backend
      - createdAt
    DetailedCostsResponseDto:
      type: object
      properties:
        costs:
          description: List of costs
          type: array
          items:
            "$ref": "#/components/schemas/TranscriptionCostDto"
        total:
          type: number
          description: Total number of records
      required:
      - costs
      - total
    MLResultSummaryDto:
      type: object
      properties:
        taskType:
          type: string
          description: Task type
        count:
          type: number
          description: Number of tasks
        avgProcessingMs:
          type: number
          description: Average processing time in milliseconds
        totalProcessingMs:
          type: number
          description: Total processing time in milliseconds
        lastProcessedAt:
          format: date-time
          type: string
          description: Last processed timestamp
      required:
      - taskType
      - count
      - avgProcessingMs
      - totalProcessingMs
      - lastProcessedAt
    BudgetStatusDto:
      type: object
      properties:
        hourly:
          type: object
          description: Hourly budget status
        daily:
          type: object
          description: Daily budget status
      required:
      - hourly
      - daily
