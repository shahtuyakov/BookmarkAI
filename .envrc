#!/usr/bin/env bash

# BookmarkAI direnv configuration
echo "Loading BookmarkAI environment..."

# Basic environment variables
export NODE_ENV=development

# Load environment variables from .env file
if [ -f .env ]; then
  echo "Loading variables from .env file..."
  source_env .env
fi

# Check if Vault is running
if command -v vault &> /dev/null; then
  if vault status &> /dev/null; then
    echo "Vault is running, loading secrets..."
    
    # Export VAULT_ADDR and VAULT_TOKEN if not already set
    export VAULT_ADDR=${VAULT_ADDR:-"http://127.0.0.1:8200"}
    
    # Check if VAULT_TOKEN is set
    if [ -z "$VAULT_TOKEN" ]; then
      # Try to get token from ~/.vault-token
      if [ -f ~/.vault-token ]; then
        export VAULT_TOKEN=$(cat ~/.vault-token)
      else
        echo "VAULT_TOKEN not set and ~/.vault-token not found. Some secrets may not be available."
      fi
    fi
    
    # Load secrets from Vault - requires jq
    if command -v jq &> /dev/null && [ -n "$VAULT_TOKEN" ]; then
      # Load database secrets
      if DB_SECRETS=$(vault kv get -format=json secret/bookmarkai/database 2>/dev/null); then
        export POSTGRES_PASSWORD=$(echo $DB_SECRETS | jq -r '.data.data.POSTGRES_PASSWORD')
        export POSTGRES_USER=$(echo $DB_SECRETS | jq -r '.data.data.POSTGRES_USER')
        echo "Loaded database secrets from Vault"
      fi
      
      # Load API keys
      if API_SECRETS=$(vault kv get -format=json secret/bookmarkai/apikeys 2>/dev/null); then
        export OPENAI_API_KEY=$(echo $API_SECRETS | jq -r '.data.data.OPENAI_API_KEY')
        echo "Loaded API keys from Vault"
      fi
    else
      echo "jq not installed or VAULT_TOKEN not set. Unable to load secrets from Vault."
    fi
  else
    echo "Vault server is not running. Secrets will not be loaded."
  fi
else
  echo "Vault CLI not found. Secrets will not be loaded."
fi

# Project-specific utilities
PATH_add ./scripts/bin

# Node.js version via .nvmrc
use_nvm

echo "Environment loaded successfully!" 